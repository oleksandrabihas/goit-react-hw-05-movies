{"version":3,"file":"static/js/247.2e01e134.chunk.js","mappings":"uQAAA,IAAMA,EACJ,sNACIC,EAAW,+BAEJC,EAAqB,CAChCC,OAAQ,MACRC,IAAI,GAAD,OAAKH,EAAL,uBACHI,OAAQ,CAAEC,SAAU,QAASC,KAAM,KACnCC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,KAIhBW,EAAoB,SAAAC,GAC/B,MAAO,CACLT,OAAQ,MACRC,IAAI,GAAD,OAAKH,EAAL,kBAAuBW,GAC1BP,OAAQ,CAAEC,SAAU,SACpBE,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,IAG9B,EAEYa,EAAc,SAAAC,GACzB,MAAO,CACLX,OAAQ,MACRC,IAAI,GAAD,OAAKH,EAAL,kBAAuBa,EAAvB,YACHN,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,IAG9B,EAEYe,EAAiB,SAAAD,GAC5B,MAAO,CACLX,OAAQ,MACRC,IAAI,GAAD,OAAKH,EAAL,kBAAuBa,EAAvB,YACHN,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,IAG9B,EAEYgB,EAAgB,SAACC,GAC5B,MAAO,CACLd,OAAQ,MACRC,IAAK,4CACLC,OAAQ,CAAEY,MAAAA,GACVT,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,IAI9B,C,kHCjBD,UArCa,WACX,OAAwBkB,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QAEFQ,GAAUC,EAAAA,EAAAA,cAAW,iBAAC,+GAIdC,EAAAA,EAAAA,SAAcX,EAAAA,EAAAA,IAAYC,IAJZ,gBAGdK,EAHc,EAGtBM,KAAQN,KAEVC,EAAQD,GALgB,gDAOxBO,QAAQC,IAAR,MAPwB,yDASzB,CAACb,IAMJ,OAJAc,EAAAA,EAAAA,YAAU,WACRN,GACD,GAAE,CAACA,KAGF,wBACGH,EAAKU,KAAI,SAAAC,GACR,IAAQC,EAAsCD,EAAtCC,GAAIC,EAAkCF,EAAlCE,KAAMC,EAA4BH,EAA5BG,UAAWC,EAAiBJ,EAAjBI,aACvBC,EAAeD,EAAY,8CACUA,GACvC,GACJ,OACE,2BACE,gBAAKE,MAAM,KAAKC,IAAKF,EAAcG,IAAKN,KACxC,uBAAIA,KACJ,yBAAG,cAAYC,OAHRF,EAMZ,KAGN,C","sources":["api/movies.js","components/Cast/Cast.jsx"],"sourcesContent":["const ACCESS_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMDk1OTYzNjJlMzI0NzAyZWNjOTFjNGZlMmRiZWUyZCIsInN1YiI6IjY0ODE4NGEyZDJiMjA5MDBhZDNhZDIyYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.2NfqXFUu6Bu9TfKlR-ML2346sf6pL6vFGjUN74YPvxg';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const optionsGetTrending = {\n  method: 'GET',\n  url: `${BASE_URL}/trending/movie/day`,\n  params: { language: 'en-US', page: '1' },\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${ACCESS_KEY}`,\n  },\n};\n\nexport const optionsGetDetails = movie_id => {\n  return {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movie_id}`,\n    params: { language: 'en-US' },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n};\n\nexport const optionsCast = movieId => {\n  return {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/credits`,\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n};\n\nexport const optionsReviews = movieId => {\n  return {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/reviews`,\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n};\n\nexport const optionsSearch = (query) => {\n  return {\n    method: 'GET',\n    url: 'https://api.themoviedb.org/3/search/movie',\n    params: { query },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n\n};\n","import { optionsCast } from 'api/movies';\nimport axios from 'axios';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  const getCast = useCallback(async () => {\n    try {\n      const {\n        data: { cast },\n      } = await axios.request(optionsCast(movieId));\n      setCast(cast);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    getCast();\n  }, [getCast]);\n\n  return (\n    <ul>\n      {cast.map(actor => {\n        const { id, name, character, profile_path } = actor;\n        const actor_poster = profile_path\n          ? `https://image.tmdb.org/t/p/original/${profile_path}`\n          : '';\n        return (\n          <li key={id}>\n            <img width=\"80\" src={actor_poster} alt={name} />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default Cast;\n"],"names":["ACCESS_KEY","BASE_URL","optionsGetTrending","method","url","params","language","page","headers","accept","Authorization","optionsGetDetails","movie_id","optionsCast","movieId","optionsReviews","optionsSearch","query","useState","cast","setCast","useParams","getCast","useCallback","axios","data","console","log","useEffect","map","actor","id","name","character","profile_path","actor_poster","width","src","alt"],"sourceRoot":""}