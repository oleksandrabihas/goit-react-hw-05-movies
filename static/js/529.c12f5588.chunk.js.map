{"version":3,"file":"static/js/529.c12f5588.chunk.js","mappings":"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","sources":["api/movies.js","components/FetchError/FetchError.jsx","components/MoviesItem/MoviesItem.styled.js","components/MoviesItem/MoviesItem.jsx","components/FormSearchMovies/FormSearchMovies.styled.js","components/FormSearchMovies/FormSearchMovies.jsx","pages/MoviePage.jsx"],"sourcesContent":["const ACCESS_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMDk1OTYzNjJlMzI0NzAyZWNjOTFjNGZlMmRiZWUyZCIsInN1YiI6IjY0ODE4NGEyZDJiMjA5MDBhZDNhZDIyYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.2NfqXFUu6Bu9TfKlR-ML2346sf6pL6vFGjUN74YPvxg';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const optionsGetTrending = {\n  method: 'GET',\n  url: `${BASE_URL}/trending/movie/day`,\n  params: { language: 'en-US', page: '1' },\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${ACCESS_KEY}`,\n  },\n};\n\nexport const optionsGetDetails = movie_id => {\n  return {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movie_id}`,\n    params: { language: 'en-US' },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n};\n\nexport const optionsCast = movieId => {\n  return {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/credits`,\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n};\n\nexport const optionsReviews = movieId => {\n  return {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/reviews`,\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n};\n\nexport const optionsSearch = (query) => {\n  return {\n    method: 'GET',\n    url: 'https://api.themoviedb.org/3/search/movie',\n    params: { query },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n\n};\n","export const FetchError = () => {\n  return (\n    <p>\n      Sorry, something went wrong. <br /> Please, try again later.\n    </p>\n  );\n   \n}","import styled from 'styled-components';\n\nexport const Movie = styled.li`\n  margin-bottom: 8px;\n  color: black;\n  font-size: 16px;\n  transition: transform 300ms ease;\n\n  &:hover {\n    color: #8e26bb82;\n  }\n`;","import { Link, useLocation} from \"react-router-dom\"\nimport { Movie } from \"./MoviesItem.styled\";\n\nexport const MoviesItem = ({ Movies }) => {\n  const location = useLocation()\n\n  return Movies?.map(({ id, original_title }) => (\n    <Movie key={id}>\n      <Link to={`/movies/${id}`} state={{from: location}}>{original_title}</Link>\n    </Movie>\n  ));\n};","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  margin-bottom: 20px;\n`;\nexport const Input = styled.input`\n  height: 25px;\n  width: 400px;\n  font-size: 16px;\n  &:focus {\n    outline-color: #8e26bb82;\n  }\n`;\nexport const BtnSearch = styled.button`\n  height: 30px;\n  font-size: 16px;\n  margin-left: 5px;\n  background-color: #8e26bb59;\n  border: none;\n  border-radius: 2px;\n`;","import { useState } from 'react';\nimport { BtnSearch, Input, StyledForm } from './FormSearchMovies.styled';\n\nconst FormSearchMovies = ({ handleSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    handleSubmit(value.toLowerCase().trim());\n    setValue('');\n  };\n\n  return (\n    <StyledForm onSubmit={onSubmit}>\n      <Input type=\"text\" name=\"query\" value={value} onChange={handleChange} />\n      <BtnSearch>Search</BtnSearch>\n    </StyledForm>\n  );\n};\nexport default FormSearchMovies;\n","import { optionsSearch } from 'api/movies';\nimport axios from 'axios';\nimport { FetchError } from 'components/FetchError/FetchError';\nimport FormSearchMovies from 'components/FormSearchMovies/FormSearchMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesItem } from 'components/MoviesItem/MoviesItem';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [searchedMovies, setSearchedMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [notFound, setNotFound] = useState(false);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getMovieBySearch = useCallback(async () => {\n    setNotFound(false);\n    setIsLoading(true);\n    try {\n      const { data } = await axios.request(optionsSearch(query));\n      setSearchedMovies(data.results);\n      if (data.results.length === 0) {\n        setNotFound(true);\n      }\n    } catch (error) {\n      console.log(error.message);\n      setError(true);\n      setSearchedMovies(null);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query]);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    getMovieBySearch();\n  }, [getMovieBySearch, query]);\n\n  const handleSubmit = query => {\n    const nextQuery = query !== '' ? { query } : {};\n    setSearchParams(nextQuery);\n  };\n\n  return (\n    <>\n      <FormSearchMovies handleSubmit={handleSubmit} />\n      {error && <FetchError />}\n      {isLoading && <Loader />}\n      <ul>\n        <MoviesItem Movies={searchedMovies} />\n      </ul>\n      {notFound && (\n        <p>\n          Sorry, we couldn't find any movie. <br />\n          Please, try again.\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["ACCESS_KEY","BASE_URL","optionsGetTrending","method","url","params","language","page","headers","accept","Authorization","optionsGetDetails","movie_id","optionsCast","movieId","optionsReviews","optionsSearch","query","FetchError","Movie","styled","MoviesItem","Movies","location","useLocation","map","id","original_title","to","state","from","StyledForm","Input","BtnSearch","handleSubmit","useState","value","setValue","onSubmit","e","preventDefault","toLowerCase","trim","type","name","onChange","target","searchedMovies","setSearchedMovies","useSearchParams","searchParams","setSearchParams","get","notFound","setNotFound","error","setError","isLoading","setIsLoading","getMovieBySearch","useCallback","axios","data","results","length","console","log","message","useEffect","Loader"],"sourceRoot":""}