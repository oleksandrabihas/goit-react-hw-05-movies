{"version":3,"file":"static/js/109.d74a5fb3.chunk.js","mappings":"uQAAA,IAAMA,EACJ,sNACIC,EAAW,+BAEJC,EAAqB,CAChCC,OAAQ,MACRC,IAAI,GAAD,OAAKH,EAAL,uBACHI,OAAQ,CAAEC,SAAU,QAASC,KAAM,KACnCC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,KAIhBW,EAAoB,SAAAC,GAC/B,MAAO,CACLT,OAAQ,MACRC,IAAI,GAAD,OAAKH,EAAL,kBAAuBW,GAC1BP,OAAQ,CAAEC,SAAU,SACpBE,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,IAG9B,EAEYa,EAAc,SAAAC,GACzB,MAAO,CACLX,OAAQ,MACRC,IAAI,GAAD,OAAKH,EAAL,kBAAuBa,EAAvB,YACHN,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,IAG9B,EAEYe,EAAiB,SAAAD,GAC5B,MAAO,CACLX,OAAQ,MACRC,IAAI,GAAD,OAAKH,EAAL,kBAAuBa,EAAvB,YACHN,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,IAG9B,EAEYgB,EAAgB,SAACC,GAC5B,MAAO,CACLd,OAAQ,MACRC,IAAK,4CACLC,OAAQ,CAAEY,MAAAA,GACVT,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,IAI9B,C,oFCzDYkB,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,cAAOF,QAAP,IAAOA,OAAP,EAAOA,EAAQG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACjB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAACC,KAAMP,GAAzC,SAAqDI,KAD9CD,EADQ,GAKpB,C,+ICYD,EApByB,SAAC,GAAsB,IAApBK,EAAmB,EAAnBA,aAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,kBAAMC,SAPS,SAAAC,GACfA,EAAEC,iBACFN,EAAaE,EAAMK,cAAcC,QACjCL,EAAS,GACV,EAGC,WACE,kBAAOM,KAAK,OAAOC,KAAK,QAAQR,MAAOA,EAAOS,SAZ7B,SAAAN,GACnBF,EAASE,EAAEO,OAAOV,MACnB,KAWG,4BAAQ,aAGb,E,iBCgCD,EA9CmB,WACjB,OAA4CD,EAAAA,EAAAA,UAAS,MAArD,eAAOY,EAAP,KAAuBC,EAAvB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACM5B,EAAQ2B,EAAaE,IAAI,SAC/B,GAAgCjB,EAAAA,EAAAA,WAAS,GAAzC,eAAOkB,EAAP,KAAiBC,EAAjB,KAEMC,GAAmBC,EAAAA,EAAAA,cAAW,iBAAC,6FACnCF,GAAY,GADuB,kBAIVG,EAAAA,EAAAA,SAAcnC,EAAAA,EAAAA,IAAcC,IAJlB,gBAIzBmC,EAJyB,EAIzBA,KACRV,EAAkBU,EAAKC,SACK,IAAxBD,EAAKC,QAAQC,QACfN,GAAY,GAPmB,kDAUjCN,EAAkB,MAVe,0DAYlC,CAACzB,KAEJsC,EAAAA,EAAAA,YAAU,WACHtC,GAGLgC,GACD,GAAE,CAACA,EAAkBhC,IAOtB,OACE,iCACE,SAAC,EAAD,CAAkBW,aAPD,SAAAX,GAEnB4B,EAD4B,KAAV5B,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAE/C,KAKG,SAACC,EAAA,EAAD,CAAYC,OAAQsB,IACnBM,IACC,2BAAK,uCACgC,kBAAM,0BAMlD,C","sources":["api/movies.js","components/MoviesItem/MoviesItem.jsx","components/FormSearchMovies/FormSearchMovies.jsx","pages/MoviePage.jsx"],"sourcesContent":["const ACCESS_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMDk1OTYzNjJlMzI0NzAyZWNjOTFjNGZlMmRiZWUyZCIsInN1YiI6IjY0ODE4NGEyZDJiMjA5MDBhZDNhZDIyYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.2NfqXFUu6Bu9TfKlR-ML2346sf6pL6vFGjUN74YPvxg';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const optionsGetTrending = {\n  method: 'GET',\n  url: `${BASE_URL}/trending/movie/day`,\n  params: { language: 'en-US', page: '1' },\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${ACCESS_KEY}`,\n  },\n};\n\nexport const optionsGetDetails = movie_id => {\n  return {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movie_id}`,\n    params: { language: 'en-US' },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n};\n\nexport const optionsCast = movieId => {\n  return {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/credits`,\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n};\n\nexport const optionsReviews = movieId => {\n  return {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/reviews`,\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n};\n\nexport const optionsSearch = (query) => {\n  return {\n    method: 'GET',\n    url: 'https://api.themoviedb.org/3/search/movie',\n    params: { query },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n\n};\n","import { Link, useLocation} from \"react-router-dom\"\n\nexport const MoviesItem = ({ Movies }) => {\n  const location = useLocation()\n\n  return Movies?.map(({ id, original_title }) => (\n    <li key={id}>\n      <Link to={`/movies/${id}`} state={{from: location}}>{original_title}</Link>\n    </li>\n  ));\n};","import { useState } from 'react';\n\nconst FormSearchMovies = ({ handleSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    handleSubmit(value.toLowerCase().trim());\n    setValue('');\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input type=\"text\" name=\"query\" value={value} onChange={handleChange} />\n      <button>Search</button>\n    </form>\n  );\n};\nexport default FormSearchMovies;\n","import { optionsSearch } from 'api/movies';\nimport axios from 'axios';\nimport FormSearchMovies from 'components/FormSearchMovies/FormSearchMovies';\nimport { MoviesItem } from 'components/MoviesItem/MoviesItem';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [searchedMovies, setSearchedMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [notFound, setNotFound] = useState(false);\n\n  const getMovieBySearch = useCallback(async () => {\n    setNotFound(false);\n\n    try {\n      const { data } = await axios.request(optionsSearch(query));\n      setSearchedMovies(data.results);\n      if (data.results.length === 0) {\n        setNotFound(true);\n      }\n    } catch (error) {\n      setSearchedMovies(null);\n    }\n  }, [query]);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    getMovieBySearch();\n  }, [getMovieBySearch, query]);\n\n  const handleSubmit = query => {\n    const nextQuery = query !== '' ? { query } : {};\n    setSearchParams(nextQuery);\n  };\n\n  return (\n    <>\n      <FormSearchMovies handleSubmit={handleSubmit} />\n      <MoviesItem Movies={searchedMovies} />\n      {notFound && (\n        <div>\n          Sorry, we couldn't find any movie. <br />\n          Please, try again.\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["ACCESS_KEY","BASE_URL","optionsGetTrending","method","url","params","language","page","headers","accept","Authorization","optionsGetDetails","movie_id","optionsCast","movieId","optionsReviews","optionsSearch","query","MoviesItem","Movies","location","useLocation","map","id","original_title","to","state","from","handleSubmit","useState","value","setValue","onSubmit","e","preventDefault","toLowerCase","trim","type","name","onChange","target","searchedMovies","setSearchedMovies","useSearchParams","searchParams","setSearchParams","get","notFound","setNotFound","getMovieBySearch","useCallback","axios","data","results","length","useEffect"],"sourceRoot":""}