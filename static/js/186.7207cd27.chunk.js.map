{"version":3,"file":"static/js/186.7207cd27.chunk.js","mappings":"uQAAA,IAAMA,EACJ,sNACIC,EAAW,+BAEJC,EAAqB,CAChCC,OAAQ,MACRC,IAAI,GAAD,OAAKH,EAAL,uBACHI,OAAQ,CAAEC,SAAU,QAASC,KAAM,KACnCC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,KAIhBW,EAAoB,SAAAC,GAC/B,MAAO,CACLT,OAAQ,MACRC,IAAI,GAAD,OAAKH,EAAL,kBAAuBW,GAC1BP,OAAQ,CAAEC,SAAU,SACpBE,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,IAG9B,EAEYa,EAAc,SAAAC,GACzB,MAAO,CACLX,OAAQ,MACRC,IAAI,GAAD,OAAKH,EAAL,kBAAuBa,EAAvB,YACHN,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,IAG9B,EAEYe,EAAiB,SAAAD,GAC5B,MAAO,CACLX,OAAQ,MACRC,IAAI,GAAD,OAAKH,EAAL,kBAAuBa,EAAvB,YACHN,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,IAG9B,EAEYgB,EAAgB,SAACC,GAC5B,MAAO,CACLd,OAAQ,MACRC,IAAK,4CACLC,OAAQ,CAAEY,MAAAA,GACVT,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,IAI9B,C,kHCnBD,UAnCgB,WACd,OAA8BkB,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QACFQ,GAAaC,EAAAA,EAAAA,cAAW,iBAAC,+GAIjBC,EAAAA,EAAAA,SAAcT,EAAAA,EAAAA,IAAeD,IAJZ,gBAGjBW,EAHiB,EAGzBC,KAAQD,QAEVL,EAAWK,GALgB,gDAO3BE,QAAQC,IAAR,MAP2B,yDAS5B,CAACd,IAMJ,OAJAe,EAAAA,EAAAA,YAAU,WACRP,GACD,GAAE,CAACA,IAEsB,IAAnBH,EAAQW,QACb,uBAAG,8CAEH,wBACGX,EAAQY,KAAI,SAAAC,GACX,IAAQC,EAAwBD,EAAxBC,GAAIC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,QACpB,OACE,2BACE,0BAAI,WAASD,MACb,uBAAIC,MAFGF,EAKZ,KAGN,C","sources":["api/movies.js","components/Reviews/Reviews.jsx"],"sourcesContent":["const ACCESS_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMDk1OTYzNjJlMzI0NzAyZWNjOTFjNGZlMmRiZWUyZCIsInN1YiI6IjY0ODE4NGEyZDJiMjA5MDBhZDNhZDIyYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.2NfqXFUu6Bu9TfKlR-ML2346sf6pL6vFGjUN74YPvxg';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const optionsGetTrending = {\n  method: 'GET',\n  url: `${BASE_URL}/trending/movie/day`,\n  params: { language: 'en-US', page: '1' },\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${ACCESS_KEY}`,\n  },\n};\n\nexport const optionsGetDetails = movie_id => {\n  return {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movie_id}`,\n    params: { language: 'en-US' },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n};\n\nexport const optionsCast = movieId => {\n  return {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/credits`,\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n};\n\nexport const optionsReviews = movieId => {\n  return {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/reviews`,\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n};\n\nexport const optionsSearch = (query) => {\n  return {\n    method: 'GET',\n    url: 'https://api.themoviedb.org/3/search/movie',\n    params: { query },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n\n};\n","import { optionsReviews } from 'api/movies';\nimport axios from 'axios';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const getReviews = useCallback(async () => {\n    try {\n      const {\n        data: { results },\n      } = await axios.request(optionsReviews(movieId));\n      setReviews(results);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    getReviews();\n  }, [getReviews]);\n\n  return reviews.length === 0 ? (\n    <p>We don't have any reviews for this movie</p>\n  ) : (\n    <ul>\n      {reviews.map(review => {\n        const { id, author, content } = review;\n        return (\n          <li key={id}>\n            <h3>Author: {author}</h3>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;"],"names":["ACCESS_KEY","BASE_URL","optionsGetTrending","method","url","params","language","page","headers","accept","Authorization","optionsGetDetails","movie_id","optionsCast","movieId","optionsReviews","optionsSearch","query","useState","reviews","setReviews","useParams","getReviews","useCallback","axios","results","data","console","log","useEffect","length","map","review","id","author","content"],"sourceRoot":""}