{"version":3,"file":"static/js/779.a8995733.chunk.js","mappings":"wQAAA,IAAMA,EACJ,sNACIC,EAAW,+BAEJC,EAAqB,CAChCC,OAAQ,MACRC,IAAI,GAAD,OAAKH,EAAL,uBACHI,OAAQ,CAAEC,SAAU,QAASC,KAAM,KACnCC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,KAIhBW,EAAoB,SAAAC,GAC/B,MAAO,CACLT,OAAQ,MACRC,IAAI,GAAD,OAAKH,EAAL,kBAAuBW,GAC1BP,OAAQ,CAAEC,SAAU,SACpBE,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,IAG9B,EAEYa,EAAc,SAAAC,GACzB,MAAO,CACLX,OAAQ,MACRC,IAAI,GAAD,OAAKH,EAAL,kBAAuBa,EAAvB,YACHN,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,IAG9B,EAEYe,EAAiB,SAAAD,GAC5B,MAAO,CACLX,OAAQ,MACRC,IAAI,GAAD,OAAKH,EAAL,kBAAuBa,EAAvB,YACHN,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,IAG9B,EAEYgB,EAAgB,SAACC,GAC5B,MAAO,CACLd,OAAQ,MACRC,IAAK,4CACLC,OAAQ,CAAEY,MAAAA,GACVT,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,IAI9B,C,kKCzDYkB,E,QAASC,GAAAA,GAAH,yF,kBCiDnB,EA5CgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQV,GAAYW,EAAAA,EAAAA,MAAZX,QAEFY,GAAaC,EAAAA,EAAAA,cAAW,iBAAC,6FAC7BH,GAAa,GADgB,kBAKjBI,EAAAA,EAAAA,SAAcb,EAAAA,EAAAA,IAAeD,IALZ,gBAIjBe,EAJiB,EAIzBC,KAAQD,QAEVP,EAAWO,GANgB,gDAQ3BE,QAAQC,IAAI,KAAMC,SARS,yBAU3BT,GAAa,GAVc,4EAY5B,CAACV,IAMJ,OAJAoB,EAAAA,EAAAA,YAAU,WACRR,GACD,GAAE,CAACA,KAGF,gCACGH,IAAa,SAACY,EAAA,EAAD,IACM,IAAnBd,EAAQe,QAAgB,uBAAG,8CAE5B,wBACGf,EAAQgB,KAAI,SAAAC,GACX,IAAQC,EAAwBD,EAAxBC,GAAIC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,QACpB,OACE,UAACvB,EAAD,YACE,0BAAI,WAASsB,MACb,uBAAIC,MAFOF,EAKhB,QAKR,C","sources":["api/movies.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["const ACCESS_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMDk1OTYzNjJlMzI0NzAyZWNjOTFjNGZlMmRiZWUyZCIsInN1YiI6IjY0ODE4NGEyZDJiMjA5MDBhZDNhZDIyYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.2NfqXFUu6Bu9TfKlR-ML2346sf6pL6vFGjUN74YPvxg';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const optionsGetTrending = {\n  method: 'GET',\n  url: `${BASE_URL}/trending/movie/day`,\n  params: { language: 'en-US', page: '1' },\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${ACCESS_KEY}`,\n  },\n};\n\nexport const optionsGetDetails = movie_id => {\n  return {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movie_id}`,\n    params: { language: 'en-US' },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n};\n\nexport const optionsCast = movieId => {\n  return {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/credits`,\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n};\n\nexport const optionsReviews = movieId => {\n  return {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/reviews`,\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n};\n\nexport const optionsSearch = (query) => {\n  return {\n    method: 'GET',\n    url: 'https://api.themoviedb.org/3/search/movie',\n    params: { query },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${ACCESS_KEY}`,\n    },\n  };\n\n};\n","import styled from 'styled-components';\n\nexport const Review = styled.li`\n  margin-bottom: 30px;\n\n  h3 {\n    margin-bottom: 10px;\n  }\n`;\n","import { optionsReviews } from 'api/movies';\nimport axios from 'axios';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Review } from './Reviews.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false)\n  const { movieId } = useParams();\n  \n  const getReviews = useCallback(async () => {\n    setIsLoading(true)\n    try {\n      const {\n        data: { results },\n      } = await axios.request(optionsReviews(movieId));\n      setReviews(results);\n    } catch (error) {\n      console.log(error.message);\n    } finally {\n      setIsLoading(false)\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    getReviews();\n  }, [getReviews]);\n\n  return (\n    <>\n      {isLoading && <Loader/>}\n      {reviews.length === 0 ? (<p>We don't have any reviews for this movie</p>) :\n      (\n      <ul>\n        {reviews.map(review => {\n          const { id, author, content } = review;\n          return (\n            <Review key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </Review>\n          );\n        })}\n      </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;"],"names":["ACCESS_KEY","BASE_URL","optionsGetTrending","method","url","params","language","page","headers","accept","Authorization","optionsGetDetails","movie_id","optionsCast","movieId","optionsReviews","optionsSearch","query","Review","styled","useState","reviews","setReviews","isLoading","setIsLoading","useParams","getReviews","useCallback","axios","results","data","console","log","message","useEffect","Loader","length","map","review","id","author","content"],"sourceRoot":""}